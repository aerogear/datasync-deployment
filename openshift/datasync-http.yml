---
kind: Template
apiVersion: v1
metadata:
  name: datasync-server-app
  annotations:
    openshift.io/display-name: Data Sync App
    description: |-
          This template allows for the deployment of the DataSync Server App from source code.
          The template uses s2i Node.js image to build the DataSync Server App for use in both development and production. 
          To evaluate the DataSync Server App, use the Showcase App template.
    tags: sync, mobile, nodejs
    iconClass: icon-nodejs
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_managed_integration/1/html-single/developing_a_data_sync_app/index
    openshift.io/support-url: https://access.redhat.com
    template.openshift.io/bindable: 'false'
    aerogear.org/datasync-template-version: '0.9.2'
message: 'The following service(s) have been created in your project: ${NAME}.'
labels:
  template: data-sync-server-app
  app: data-sync-server-app
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: http
      port:  ${{PORT}}
      targetPort:  ${{PORT}}
    selector:
      name: "${NAME}"
- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${NAME}"
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Keeps track of changes in the application image
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: "${BUILDER_IMAGE}"
          namespace: openshift
        env:
        - name: NPM_MIRROR
          value: "${NPM_MIRROR}"
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"
    - type: Generic
      generic:
        secret: "${GENERIC_WEBHOOK_SECRET}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        containers:
        - name: "${NAME}"
          image: " "
          ports:
          - containerPort:  ${{PORT}}
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          env: []
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: data-sync-app
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  required: true
  value: 512Mi
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  description: The URL of the repository with your application source code.
  required: true
  value: 'https://github.com/aerogear/voyager-server'
- name: BUILDER_IMAGE
  displayName: S2I Builder Image
  description: The S2I builder image to use when building this application
  required: true
  value: nodejs:10
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root
    of your repository.
  value: 'examples'
- name: PORT
  displayName: Service port
  description: Port number used by application
  value: '4000'
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the Node.js service, if left
    blank a value will be defaulted.
  value: ''
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: GENERIC_WEBHOOK_SECRET
  displayName: Generic Webhook Secret
  description: A secret string used to configure the Generic webhook.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: NPM_MIRROR
  displayName: Custom NPM Mirror URL
  description: The custom NPM mirror URL
  value: ''
