global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']

  - job_name: services-https
    scheme: https
    tls_config: 
      insecure_skip_verify: true
    kubernetes_sd_configs: 
    - role: service
      namespaces:
        names:
          - NAMESPACE_PLACEHOLDER
    # we use relabeling mechanism of Prometheus to decide if a service is a scrape target.
    # same mechanism is used to find out the metrics endpoint path.
    # see example config here: https://github.com/prometheus/prometheus/blob/master/documentation/examples/prometheus-kubernetes.yml
    relabel_configs:
        # if the service that is currently checked has the annotation "org.aerogear.metrics/ssl_endpoint", keep it. it will be a scrape target.
      - action: keep
        regex: \/.*
        source_labels:
          # explanation of: __meta_kubernetes_service_annotation_org_aerogear_metrics_ssl_endpoint
          # 1. __meta_kubernetes_service_annotation_ : comes from https://prometheus.io/docs/prometheus/latest/configuration/configuration/#service
          # 2. org_aerogear_metrics_ssl_endpoint     : the annotation we're looking for. but '.' and '/' are converted to '_'
          - __meta_kubernetes_service_annotation_org_aerogear_metrics_ssl_endpoint
      - source_labels:
          - __address__
        target_label: __param_target
      - source_labels:
          - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: 
          - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels: 
          - __meta_kubernetes_service_name
        target_label: kubernetes_name
        # set __metrics_path__ from the value of the annotation. Value of __metrics_path__ will be the endpoint path that Prometheus will do requests.
      - source_labels: [__meta_kubernetes_service_annotation_org_aerogear_metrics_ssl_endpoint]
        regex: (.+)
        target_label: __metrics_path__

  - job_name: services-http
    scheme: http
    kubernetes_sd_configs: 
    - role: service
      namespaces:
        names:
          - NAMESPACE_PLACEHOLDER
    relabel_configs: 
      - action: keep
        regex: \/.*
        source_labels:
          - __meta_kubernetes_service_annotation_org_aerogear_metrics_plain_endpoint
      - source_labels: 
          - __address__
        target_label: __param_target
      - source_labels: 
          - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: 
          - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels: 
          - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_service_annotation_org_aerogear_metrics_plain_endpoint]
        regex: (.+)
        target_label: __metrics_path__

  # auto discovery for pods as scrape targets
  # set org.aerogear.metrics/plain_endpoint: /metrics as an annotation on the pod to make it targeted by Prometheus
  # see https://github.com/prometheus/prometheus/blob/03a9e7f72e072c6d29f422425d8acd91a957836b/documentation/examples/prometheus-kubernetes.yml#L246
  # unlike services, no SSL support for pods
  - job_name: pods
    scheme: http
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
          - NAMESPACE_PLACEHOLDER
    relabel_configs:
      - action: keep
        regex: (.+)
        source_labels: [__meta_kubernetes_pod_annotation_org_aerogear_metrics_plain_endpoint]
      - source_labels: [__address__]
        target_label:  __param_target
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      - source_labels: [__meta_kubernetes_pod_annotation_org_aerogear_metrics_plain_endpoint]
        regex: (.+)
        target_label: __metrics_path__